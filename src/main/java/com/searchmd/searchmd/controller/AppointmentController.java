package com.searchmd.searchmd.controller;



import com.searchmd.searchmd.models.Patienttable;
import com.searchmd.searchmd.models.Appointmenttable;
import com.searchmd.searchmd.models.AppointmenttableRepository;
import com.searchmd.searchmd.models.PatientRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Logger;

@Controller // This means that this class is a Controller
@RequestMapping(path="/appointment") // This means URL's start with /appointment (after Application path)
public class AppointmentController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    
    //Logger logger = Logger.getLogger(UserController.class.getName());

    private AppointmenttableRepository repository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewAppointment (@RequestParam Integer patientId, @RequestParam Integer doctorId, @RequestParam String appDate) throws ParseException {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Appointmenttable appointmentTable = new Appointmenttable();
        appointmentTable.setPatientid(patientId);
        appointmentTable.setDoctorid(doctorId);
        //DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
        LocalDateTime date = LocalDateTime.parse(appDate); // date time should be of format yyyy-MM-ddTHH:mm:ss
        System.out.println((date));
        appointmentTable.setAppdate(date);
        repository.save(appointmentTable);

        return "Saved Appointment";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Appointmenttable> getAllAppointments() {
        // This returns a JSON or XML with the users
        //logger.log(Level.INFO,"In get all usermethod");
        
        return repository.findAll();
    }
}

