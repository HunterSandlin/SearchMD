package com.searchmd.searchmd.controller;



import com.searchmd.searchmd.models.Patienttable;
import com.searchmd.searchmd.models.PatientRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDate;

import java.util.logging.Logger;

@Controller // This means that this class is a Controller
@CrossOrigin(origins = "http://localhost:3000/")
@RequestMapping(path="/patient") // This means URL's start with /user (after Application path)
public class PatientController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PatientRepository patientRepository;

    Logger logger = Logger.getLogger(UserController.class.getName());

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewPatient (@RequestParam String dob, @RequestParam String insuranceid,
                                               @RequestParam int patientId, @RequestParam String pfName,
                                               @RequestParam String plName, @RequestParam String userRole,
                                               @RequestParam int userid ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Patienttable p = new Patienttable();
        p.setPatientid(patientId);
        p.setInsuranceid(insuranceid);
        LocalDate dateOfBirth = LocalDate.parse(dob);
        p.setDob(dateOfBirth);
        p.setPfname(pfName);
        p.setPlname(plName);
        p.setUserrole(userRole);
        p.setUserid(userid);
        patientRepository.save(p);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Patienttable> getAllPatients() {
        // This returns a JSON or XML with the users
        //logger.log(Level.INFO,"In get all usermethod");
        return patientRepository.findAll();
    }
}

